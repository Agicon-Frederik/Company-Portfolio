# This config was automatically generated from your source code
# Stacks detected: deps:node:.
version: 2.1
orbs:
  node: circleci/node@5
jobs:
  build-node:
    # Build node project
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npx pnpm install
      - run:
          command: npx pnpm run build
      - run:
          name: Create Artifacts Directory
          command: mkdir -p ~/artifacts
      - run:
          name: Verify Build Output
          command: |
            if [ ! -d build ] && [ ! -d dist ] && [ ! -d public ] && [ ! -d .output ] && [ ! -d .next ] && [ ! -d .docusaurus ]; then
              echo "No build output found. Ensure the build process generates these directories.";
              exit 1;
            fi
      - run:
          name: Copy Artifacts
          command: |
            for dir in build dist public .output .next .docusaurus; do
              if [ -d "$dir" ]; then
                cp -R "$dir" ~/artifacts/
              fi
            done
      - persist_to_workspace:
          root: ~/artifacts
          paths:
            - "*"
  deploy:
    # This is an example deploy job, not actually used by the workflow
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: ~/artifacts
      - add_ssh_keys:
          fingerprints:
            - "a3:24:c2:9a:98:bb:bd:ef:dc:4c:ac:db:33:9d:2e:fa"
      - run:
          name: List Files to Deploy
          command: ls -la ~/artifacts
      - run:
          name: Validate Deployment Files
          command: |
            if [ ! "$(ls -A ~/artifacts)" ]; then
              echo "No files to deploy. Ensure the workspace contains the necessary artifacts.";
              exit 1;
            fi
      - run:
          name: Deploy to EC2
          command: |
            scp -o StrictHostKeyChecking=accept-new -r ~/artifacts/* ubuntu@52.47.113.226:~/docker/nginx-proxy-manager/data$/agiconbe
workflows:
  build:
    jobs:
      - build-node
      - deploy:
         requires:
          - build-node
